g <- ggplot(aes(y = time, x = factor(test), fill = treat), data = data) + geom_boxplot() +
xlab("Diagnostic Test") + ylab("Test Duration (min.)")
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9))
g +  geom_text(data = a, aes(label = time),
hjust=-0.5, vjust=0)
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9))
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=1)
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-1.25)
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-1)
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-0.75)
data <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
a <- aggregate(time ~ test + treat , data, function(i) round(median(i)))
g <- ggplot(aes(y = time, x = factor(test), fill = treat), data = data) + geom_boxplot() +
xlab("Diagnostic Test") + ylab("Test Duration (min.)")
BoxPlotMathG3 <- g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-0.75)
png(filename="C:/Users/Amlan/PROJECTS/RWES/BoxPlotMathG3.png")
plot(BoxPlotMathG3)
dev.off()
a <- aggregate(score ~ test + treat , data, function(i) round(median(i)))
g <- ggplot(aes(y = score, x = factor(test), fill = treat), data = data) + geom_boxplot() +
xlab("Diagnostic Test") + ylab("Test Duration (min.)")
BoxPlotMathG3 <- g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-0.75)
BoxPlotMathG3
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-0.75)
data <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
a <- aggregate(score ~ test + treat , data, function(i) round(median(i)))
g <- ggplot(aes(y = score, x = factor(test), fill = treat), data = data) + geom_boxplot() +
xlab("Diagnostic Test") + ylab("Test Duration (min.)")
g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-0.75)
a
g
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & treat=="Child First", row.names = F)
GridPlotMathG4_CF <- xyplot(score ~ factor(test) | factor(StudentID), data = data,
xlab = "Diagnostic Test",
ylab = "iREADY Math Score", layout = c(4,4),
scales="free", pch=19, panel = function(x, y) {
panel.xyplot(x,y,pch=19, cex=0.5, col="black")
panel.lmline(x,y,col="red", lty=2)
})
png(filename="C:/Users/Amlan/PROJECTS/RWES/GridPlotMathG4_CF.png")
plot(GridPlotMathG4_CF)
dev.off()
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & treat=="Holistic Me", row.names = F)
GridPlotMathG4_HM <- xyplot(score ~ factor(test) | factor(StudentID), data = data,
xlab = "Diagnostic Test",
ylab = "iREADY Math Score", layout = c(5,4),
scales="free", pch=19, panel = function(x, y) {
panel.xyplot(x,y,pch=19, cex=0.5, col="black")
panel.lmline(x,y,col="red", lty=2)
})
png(filename="C:/Users/Amlan/PROJECTS/RWES/GridPlotMathG4_HM.png")
plot(GridPlotMathG3)
dev.off()
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & treat=="Holistic Me", row.names = F)
GridPlotMathG4_HM <- xyplot(score ~ factor(test) | factor(StudentID), data = data,
xlab = "Diagnostic Test",
ylab = "iREADY Math Score", layout = c(5,4),
scales="free", pch=19, panel = function(x, y) {
panel.xyplot(x,y,pch=19, cex=0.5, col="black")
panel.lmline(x,y,col="red", lty=2)
})
png(filename="C:/Users/Amlan/PROJECTS/RWES/GridPlotMathG4_HM.png")
plot(GridPlotMathG4_HM)
dev.off()
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
interaction.data <- ddply(data,.(test,treat),summarise, val = mean(score))
IntPlotMathG4 <- ggplot(interaction.data, aes(x = factor(test), y = val, colour = treat)) +
geom_point(data = interaction.data, aes(y = val), size = 4) +
geom_line(data = interaction.data, aes(y = val, group = treat, linetype = treat)) +
theme_bw() + xlab("Diagnostic Test") + ylab("Group Average of iREADY Math Score") + scale_size_area() +
geom_text(aes(label= round(val, digits = 0)),hjust=-0.5, vjust=0)
png(filename="C:/Users/Amlan/PROJECTS/RWES/IntPlotMathG4.png")
plot(IntPlotMathG4)
dev.off()
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
a <- aggregate(time ~ test + treat , data, function(i) round(median(i)))
g <- ggplot(aes(y = time, x = factor(test), fill = treat), data = data) + geom_boxplot() +
xlab("Diagnostic Test") + ylab("Test Duration (min.)")
BoxPlotMathG4 <- g +  geom_text(data = a, aes(label = time),
position = position_dodge(width=0.9), vjust=-0.75)
png(filename="C:/Users/Amlan/PROJECTS/RWES/BoxPlotMathG4.png")
plot(BoxPlotMathG4)
dev.off()
ModelData <- subset(MathScoreLong, Grade==4 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ModelData <- within(ModelData, {
test <- factor(test)
StudentID <- factor(StudentID)
})
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ncol = 3))
var(mat)
cor(mat)
## Compound symmetry
fit.cs <- gls(ZScore ~ treatment * test, data = ModelData,
corr = corCompSymm( , form= ~ 1 | StudentID) )
summary(fit.cs)
anova(fit.cs) ## Model 1
ModelData <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ModelData <- within(ModelData, {
test <- factor(test)
StudentID <- factor(StudentID)
})
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ncol = 3))
var(mat)
cor(mat)
## Compound symmetry
fit.cs <- gls(ZScore ~ treatment * test, data = ModelData,
corr = corCompSymm( , form= ~ 1 | StudentID) )
summary(fit.cs)
anova(fit.cs) ## Model 1
fit.cs <- gls(ZScore ~ treatment * test + female + ZTime, data = ModelData,
corr = corCompSymm( , form= ~ 1 | StudentID) )
summary(fit.cs) ## Model 2
anova(fit.cs)
fit.cs <- gls(ZScore ~ treatment * test, data = ModelData,
corr = corCompSymm( , form= ~ 1 | StudentID) )
summary(fit.cs)
anova(fit.cs)
fit.cs <- gls(ZScore ~ treatment * test + female + ZTime, data = ModelData,
corr = corCompSymm( , form= ~ 1 | StudentID) )
summary(fit.cs) ## Model 2
anova(fit.cs)
data <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
a <- aggregate(score ~ test + Gender , data, function(i) round(median(i)))
data <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
interaction.data <- ddply(data,.(test,Gender),summarise, val = mean(score))
GenPlotMathG3 <- ggplot(interaction.data, aes(x = factor(test), y = val, colour = Gender)) +
geom_point(data = interaction.data, aes(y = val), size = 4) +
geom_line(data = interaction.data, aes(y = val, group = Gender, linetype = Gender)) +
theme_bw() + xlab("Diagnostic Test") + ylab("Group Average of iREADY Math Score") + scale_size_area() +
geom_text(aes(label= round(val, digits = 0)),hjust=-0.5, vjust=0)
png(filename="C:/Users/Amlan/PROJECTS/RWES/GenPlotMathG3.png")
plot(GenPlotMathG3)
dev.off()
ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="blue",
addConfidenceInterval=TRUE, smoothingMethod="loess") +
xlab='Test Duration (min.)' + ylab='iREADY Math Score'
ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="blue",
addConfidenceInterval=TRUE, smoothingMethod="loess") +
xlab="Test Duration (min.)" + ylab="iREADY Math Score"
ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="blue",
addConfidenceInterval=TRUE, smoothingMethod="loess")
install.packages("devtools")
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="blue",
addConfidenceInterval=TRUE, smoothingMethod="loess")
ScatterPlotMathG3 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="blue",
addConfidenceInterval=TRUE, smoothingMethod="loess") +
xlab="Test Duration (min.)" + ylab="iREADY Math Score"
data <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ScatterPlotMathG3 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="blue",
xtitle="Test Duration (min.)", ytitle="iREADY Math Score",
addConfidenceInterval=TRUE)
png(filename="C:/Users/Amlan/PROJECTS/RWES/ScatterPlotMathG3.png")
plot(ScatterPlotMathG3)
dev.off()
data <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ScatterPlotMathG3 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="red",
xtitle="Test Duration (min.)", ytitle="iREADY Math Score",
addConfidenceInterval=TRUE, smoothingMethod="loess")
png(filename="C:/Users/Amlan/PROJECTS/RWES/ScatterPlotMathG3.png")
plot(ScatterPlotMathG3)
dev.off()
ScatterPlotMathG3 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="red",
xtitle="Test Duration (min.)", ytitle="iREADY Math Score",
xtitleFont = c(12,"plain", "black"), ytitleFont = c(12,"plain", "black")
addConfidenceInterval=TRUE, smoothingMethod="loess")
png(filename="C:/Users/Amlan/PROJECTS/RWES/ScatterPlotMathG3.png")
plot(ScatterPlotMathG3)
dev.off()
ScatterPlotMathG3 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="red",
xtitle="Test Duration (min.)", ytitle="iREADY Math Score",
xtitleFont = c(12,"plain", "black"), ytitleFont = c(12,"plain", "black"),
addConfidenceInterval=TRUE, smoothingMethod="loess")
png(filename="C:/Users/Amlan/PROJECTS/RWES/ScatterPlotMathG3.png")
plot(ScatterPlotMathG3)
dev.off()
ScatterPlotMathG3 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="red",
xtitle="Test Duration (min.)", ytitle="iREADY Math Score",
xtitleFont = c(12,"plain","black"), ytitleFont = c(12,"plain","black"),
addConfidenceInterval=TRUE, smoothingMethod="loess")
png(filename="C:/Users/Amlan/PROJECTS/RWES/ScatterPlotMathG3.png")
plot(ScatterPlotMathG3)
dev.off()
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ScatterPlotMathG4 <- ggplot2.scatterplot(data=data, xName='time',yName='score',
addRegLine=TRUE, regLineColor="red",
xtitle="Test Duration (min.)", ytitle="iREADY Math Score",
xtitleFont = c(12,"plain","black"), ytitleFont = c(12,"plain","black"),
addConfidenceInterval=TRUE, smoothingMethod="loess")
png(filename="C:/Users/Amlan/PROJECTS/RWES/ScatterPlotMathG4.png")
plot(ScatterPlotMathG4)
dev.off()
data <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
interaction.data <- ddply(data,.(test,Gender),summarise, val = mean(score))
GenPlotMathG4 <- ggplot(interaction.data, aes(x = factor(test), y = val, colour = Gender)) +
geom_point(data = interaction.data, aes(y = val), size = 4) +
geom_line(data = interaction.data, aes(y = val, group = Gender, linetype = Gender)) +
theme_bw() + xlab("Diagnostic Test") + ylab("Group Average of iREADY Math Score") + scale_size_area() +
geom_text(aes(label= round(val, digits = 0)),hjust=-0.5, vjust=0)
png(filename="C:/Users/Amlan/PROJECTS/RWES/GenPlotMathG4.png")
plot(GenPlotMathG4)
dev.off()
ModelData <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ModelData <- within(ModelData, {
test <- factor(test)
StudentID <- factor(StudentID)
})
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ZScore[test==4])
ZScore[test==5]), ncol = 3))
var(mat)
cor(mat)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ZScore[test==4])
ZScore[test==5]), ncol = 5))
var(mat)
cor(mat)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3], ZScore[test==4],
ZScore[test==5]), ncol = 5))
var(mat)
cor(mat)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3], ZScore[test==4],
ZScore[test==5]), ncol = 5))
ModelData <- subset(MathScoreLong, Grade==4 & test_count>=3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ModelData <- within(ModelData, {
test <- factor(test)
StudentID <- factor(StudentID)
})
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3], ZScore[test==4],
ZScore[test==5]), ncol = 5))
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3], ZScore[test==4], ZScore[test==5]), ncol = 5))
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3], ZScore[test==4]), ncol = 5))
var(mat)
cor(mat)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ncol = 5))
require(nlme)
ModelData <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ModelData <- within(ModelData, {
test <- factor(test)
StudentID <- factor(StudentID)
})
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ncol = 3))
var(mat)
cor(mat)
require(nlme)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ncol = 3))
edit(ModelData)
ModelData <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
edit(ModelData)
ModelData <- within(ModelData, {
test <- factor(test)
StudentID <- factor(StudentID)
})
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
edit(ModelData)
ModelData <- subset(MathScoreLong, Grade==3 & test_count==3 & (treat=="Child First" | treat=="Holistic Me"), row.names = F)
ModelData$female <- as.numeric(ModelData$Gender=="F")
ModelData$treatment <- as.numeric(ModelData$treat=="Holistic Me")
ModelData$ZScore <- scale(ModelData$score, center = TRUE, scale = TRUE)
ModelData$ZTime <- scale(ModelData$time, center = TRUE, scale = TRUE)
mat <- with(ModelData, matrix(c(ZScore[test==1], Zscore[test==2], ZScore[test==3]), ncol = 3))
var(mat)
cor(mat)
---
title: "Viridis Demo"
output: html_document
---
```{r include = FALSE}
library(viridis)
```
The code below demonstrates two color palettes in the [viridis](https://github.com/sjmgarnier/viridis) package. Each plot displays a contour map of the Maunga Whau volcano in Auckland, New Zealand.
## Viridis colors
```{r}
image(volcano, col = viridis(200))
```
## Magma colors
```{r}
image(volcano, col = viridis(200, option = "A"))
```
install.packages("viridis")
install.packages("rmarkdown")
library(rmarkdown)
setwd("~/Amlan's Website")
rmarkdown::render_site
setwd("~/Amlan's Website")
setwd("~/Amlan's Website")
setwd("~/Amlan's Website")
# https://plot.ly/r/map-subplots-and-small-multiples/
# US map small multiples
library(plotly)
df <- read.csv("lea_charter_1")
# common map properties
g <- list(scope = 'usa', showland = T, landcolor = toRGB("gray90"), showcountries = F, subunitcolor = toRGB("white"))
# year text labels
yrs <- unique(df$YEAR)
id <- seq_along(yrs)
df2 <- data.frame(
YEAR = yrs,
id = id
)
# id for anchoring traces on different plots
df$id <- as.integer(factor(df$YEAR))
p <- plot_ly(df, type = 'scattergeo', lon = LON, lat = LAT, group = YEAR,
geo = paste0("geo", id), showlegend = F,
marker = list(color = toRGB("blue"), opacity = 0.5)) %>%
add_trace(lon = -78, lat = 47, mode = 'text', group = YEAR, type = 'scattergeo', showlegend = F,
geo = paste0("geo", id), text = YEAR, data = df2) %>%
layout(title = 'New Walmart Stores per year 1962-2006<br> Source: <a href="http://www.econ.umn.edu/~holmes/data/WalMart/index.html">University of Minnesota</a>',
geo = g,
autosize = F,
width = 1000,
height = 1000,
hovermode = F)
subplot(p, nrows = 3)
# https://plot.ly/r/map-subplots-and-small-multiples/
# US map small multiples
library(plotly)
df <- read.csv("C:\Users\Amlan\Documents\Amlan's Website\lea_charter_1.csv")
# common map properties
g <- list(scope = 'usa', showland = T, landcolor = toRGB("gray90"), showcountries = F, subunitcolor = toRGB("white"))
# year text labels
yrs <- unique(df$YEAR)
id <- seq_along(yrs)
df2 <- data.frame(
YEAR = yrs,
id = id
)
# id for anchoring traces on different plots
df$id <- as.integer(factor(df$YEAR))
p <- plot_ly(df, type = 'scattergeo', lon = LON, lat = LAT, group = YEAR,
geo = paste0("geo", id), showlegend = F,
marker = list(color = toRGB("blue"), opacity = 0.5)) %>%
add_trace(lon = -78, lat = 47, mode = 'text', group = YEAR, type = 'scattergeo', showlegend = F,
geo = paste0("geo", id), text = YEAR, data = df2) %>%
layout(title = 'New Walmart Stores per year 1962-2006<br> Source: <a href="http://www.econ.umn.edu/~holmes/data/WalMart/index.html">University of Minnesota</a>',
geo = g,
autosize = F,
width = 1000,
height = 1000,
hovermode = F)
subplot(p, nrows = 3)
# https://plot.ly/r/map-subplots-and-small-multiples/
# US map small multiples
library(plotly)
df <- read.csv("C:/Users/Amlan/Documents/Amlan's Website/lea_charter_1.csv")
# common map properties
g <- list(scope = 'usa', showland = T, landcolor = toRGB("gray90"), showcountries = F, subunitcolor = toRGB("white"))
# year text labels
yrs <- unique(df$YEAR)
id <- seq_along(yrs)
df2 <- data.frame(
YEAR = yrs,
id = id
)
# id for anchoring traces on different plots
df$id <- as.integer(factor(df$YEAR))
p <- plot_ly(df, type = 'scattergeo', lon = LON, lat = LAT, group = YEAR,
geo = paste0("geo", id), showlegend = F,
marker = list(color = toRGB("blue"), opacity = 0.5)) %>%
add_trace(lon = -78, lat = 47, mode = 'text', group = YEAR, type = 'scattergeo', showlegend = F,
geo = paste0("geo", id), text = YEAR, data = df2) %>%
layout(title = 'New Walmart Stores per year 1962-2006<br> Source: <a href="http://www.econ.umn.edu/~holmes/data/WalMart/index.html">University of Minnesota</a>',
geo = g,
autosize = F,
width = 1000,
height = 1000,
hovermode = F)
subplot(p, nrows = 3)
edit(df)
count(df$YEAR)
nrow(df$YEAR)
names(df)
sum(df$AGCHRT)
ggplot(data=df, aes(x=factor(YEAR)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
theme_minimal()
df <- read.csv("C:/Users/Amlan/Documents/Amlan's Website/lea_charter_1.csv")
df$YEAR <- NA
df$YEAR[df$SHYEAR =='2002-03'] <- 2003
df$YEAR[df$SHYEAR =='2003-04'] <- 2004
df$YEAR[df$SHYEAR =='2004-05'] <- 2005
df$YEAR[df$SHYEAR =='2005-06'] <- 2006
df$YEAR[df$SHYEAR =='2006-07'] <- 2007
df$YEAR[df$SHYEAR =='2007-08'] <- 2008
df$YEAR[df$SHYEAR =='2008-09'] <- 2009
df$YEAR[df$SHYEAR =='2009-10'] <- 2010
df$YEAR[df$SHYEAR =='2010-11'] <- 2011
df$YEAR[df$SHYEAR =='2011-12'] <- 2012
df$YEAR[df$SHYEAR =='2012-13'] <- 2013
df$YEAR[df$SHYEAR =='2013-14'] <- 2014
df <- subset(df, df$YEAR>2003)
ggplot(data=df, aes(x=YEAR, y=AGCHRT)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=AGCHRT), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
geom_text(aes(label=sum(AGCHRT)), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
geom_text(aes(label="count"), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR)))+
geom_bar(stat="count", width=0.7, fill="steelblue")+
geom_text(aes(label=YEAR), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR), y=AGCHRT)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=sum(AGCHRT)), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR), y=AGCHRT)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=sum(AGCHRT)), vjust=1.6, color="black", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR), y=AGCHRT)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=sprintf(“%.2f%%”,sum(AGCHRT))),
vjust=0.6, color="black", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR), y=AGCHRT)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=sprintf(sum(AGCHRT))),
vjust=0.6, color="black", size=3.5)+
theme_minimal()
ggplot(data=df, aes(x=factor(YEAR), y=AGCHRT)) +
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=sum(AGCHRT)),
vjust=0.6, color="black", size=3.5)+
theme_minimal()
ggplot(data=df,aes(x=YEAR)) + geom_bar() + geom_text(stat='bin',aes(label=..count..),vjust=-1)
ggplot(data=df,aes(x=factor(YEAR)) + geom_bar() + geom_text(stat='bin',aes(label=..count..),vjust=-1)
ggplot(data=df,aes(x=YEAR)) + geom_bar() + geom_text(stat='bin',aes(label=..count..),vjust=-1)
ggplot(data=df,aes(x=YEAR)) + geom_bar() + geom_text(stat='bin',aes(label=..count..),vjust=-1)
ggplot(data=df,aes(x=factor(YEAR))) + geom_bar() + geom_text(stat='bin',aes(label=..count..),vjust=-1)
ggplot(data=df,aes(x=factor(YEAR))) + geom_bar() + geom_text(stat='count',aes(label=..count..),vjust=-1)
ggplot(data=df,aes(x=factor(YEAR))) +
geom_bar(fill="steelblue") +
geom_text(stat='count',aes(label=..count..),vjust=-1) +
theme_minimal()
ggplot(data=df,aes(x=factor(YEAR))) +
geom_bar(fill="steelblue") +
geom_text(stat='count',aes(label=..count..),vjust=-1) +
theme_minimal()+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(data=df,aes(x=factor(YEAR))) +
geom_bar(fill="steelblue") +
geom_text(stat='count',aes(label=..count..),vjust=-1, size=3.5) +
theme_minimal()+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(data=df,aes(x=factor(YEAR))) +
geom_bar(fill="steelblue") +
geom_text(stat='count',aes(label=..count..),vjust=-1, size=3) +
theme_minimal()+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
df <- read.csv("C:/Users/Amlan/Documents/Amlan's Website/lea_charter_2.csv")
table(df$SHYEAR)
